# Redis 설정 - Vercel에서 자동 생성됨
REDIS_URL=redis://username:password@host:port

# 데이터 소스 API 키 설정
# Yahoo Finance는 무료이고 rate limit이 없으므로 API 키가 필요하지 않습니다.
# 주가 데이터는 Yahoo Finance에서 가져옵니다.

# Alpha Vantage API 설정 (실적 데이터용 - 10년치 데이터 제공)
ALPHA_VANTAGE_API_KEY=FQ57BNNTDJWM2CXV

# Finnhub API 설정 (대안)
FINNHUB_API_KEY=d3ce8g1r01qu125aq3h0d3ce8g1r01qu125aq3hg

# OpenAI API 설정
OPENAI_API_KEY=your_openai_api_key

# API 보안 설정
API_SECRET_KEY=your_secret_key_for_api_authentication

# Finnhub configuration
USE_FINNHUB_EARNINGS=true
USE_FINNHUB_PRICES=false
FINNHUB_BACKOFF_BASE_MS=250
FINNHUB_BACKOFF_MAX_RETRIES=3

# ---------------------------------------------
# SEC(EDGAR) 관련 설정
# ---------------------------------------------
# SEC_USER_AGENT: SEC API 요청에 필수인 User-Agent 문자열입니다.
#   권장 포맷 예) your-app-name/1.0 (contact: you@example.com)
#   미설정 시 기본값(gongui-sec-client/1.0 ...)이 사용됩니다.
SEC_USER_AGENT=

# SEC_CONTACT: SEC 요청 시 연락처 이메일(선택)
#   User-Agent 내 contact에 포함되어 레이트리밋/문의 시 도움이 됩니다.
SEC_CONTACT=

# ---------------------------------------------
# 분석 API(Analyze)에서 SEC 보강 동작 제어
# ---------------------------------------------
# ANALYZE_SEC_ENRICH: '1'이면 /api/analyze에서 SEC 기반 보강을 추가 시도합니다.
#   - 결측(특히 revenue/EPS)일 때만 채우며, 기존 값은 덮어쓰지 않습니다.
#   - 서버리스 타임아웃을 피하기 위해 프로덕션(Vercel)에서는 기본 비활성입니다.
#   - 로컬/배치/프리워밍용으로 활성화 권장
# 예) 로컬에서 활성화하려면 1, 프로덕션에서는 비워두거나 0
ANALYZE_SEC_ENRICH=

# ANALYZE_SEC_TIMEOUT_MS: SEC 보강 한 건당 최대 대기 시간(ms)
#   - 짧게(2000~3000ms 권장) 설정해 지연/타임아웃 리스크를 줄입니다.
#   - 타임아웃 시 보강은 건너뛰고 기존 경로로 계속 진행합니다.
ANALYZE_SEC_TIMEOUT_MS=2500

# 8-K Exhibit 99 기반 D0 교정 우선 사용 (기본 1)
USE_EX99_EVENT_DATE=1

# EPS 정규화 시 전체 히스토리 분할 소급 적용 (기본 1)
STRICT_SPLIT_ADJ_EPS=1
# EPS 벤더치(비-SEC)를 최후수단으로 허용할지 (기본 0=비허용)
EPS_VENDOR_FALLBACK=0

# CAR t-stat 방법(resid|event). 기본 resid(잔차 SD), event는 이벤트창 SD 기반
CAR_TSTAT_METHOD=resid

# ---------------------------------------------
# 디버그 로깅 제어(필요 시만 사용)
# ---------------------------------------------
# DEBUG_LOGS: 전역 디버그 스위치('1'이면 주요 디버그 로그 활성)
# DEBUG_ANALYZE: analyze 경로 관련 상세 로그('1'이면 활성)
# DEBUG_SEC: SEC 관련 상세 로그('1'이면 활성)
#   - 운영 환경에서는 모두 비우는 것을 권장합니다.
DEBUG_LOGS=
DEBUG_ANALYZE=
DEBUG_SEC=

# ---------------------------------------------
# 참고: Vercel/런타임 관련
# ---------------------------------------------
# VERCEL: Vercel 환경에서 자동으로 설정됩니다. 수동 설정 불필요
# NODE_ENV: 빌드/런타임 모드. 일반적으로 build 시 production으로 설정됩니다.
# 이 값들은 코드의 런타임 분기(예: Vercel 여부 판단)에 사용됩니다.
# VERCEL=
# NODE_ENV=
